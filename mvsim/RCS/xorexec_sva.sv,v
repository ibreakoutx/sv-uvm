head	1.1;
access;
symbols;
locks
	vsananda:1.1; strict;
comment	@# @;


1.1
date	2012.11.09.17.42.30;	author vsananda;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
Function:
 Running XOR of a stream of bytes.
 Number of bytes indicated by first byte (not included in XOR).
 Eg:
 Bytestream: 0x04,0x16,0x5,0x8,0xFF,    0x3,0x44,0x76,0x65
              ^     <----------->       <-- Next set of 3 bytes->
              |           |     |
             Number  XOR these  |
             bytes   4 bytes    |
                                |-> Push to output fifo                  
*/

module xorexec_sva #(parameter int dwidth=8)
   ( input clk, rst,

     //ififo interface
     input ififo_pop,
     input ififo_rdy,
     input [dwidth-1:0] idata,

     //ofifo interface
     input ofifo_not_full,
     input ofifo_push,
     input [dwidth-1:0] odata,

     input [1:0] fsm_cs 
     );

default clocking cb @@(posedge clk);  endclocking

//If ififo_pop is active, ififo_rdy should be true
as_ififo_data: assume property ( idata >= 8'h4 );
as_ififo_pop: assume property ( disable iff(rst) ififo_pop |-> ififo_rdy  );
//as_ofifo_not_full: assume property( disable iff(rst) ofifo_push |-> (fsm_cs_2_cnt == 4) );
   

logic [3:0] fsm_cs_2_cnt ;
   
always @@(posedge clk)
  if (rst)
    fsm_cs_2_cnt <= 0;
  else
    if ( fsm_cs == 2 )
      fsm_cs_2_cnt <= fsm_cs_2_cnt + 1;
    
cp_push: cover property ( disable iff(rst) ofifo_push |-> (fsm_cs_2_cnt == 4) );
   
   
endmodule // xorexec

bind xorexec xorexec_sva sva_inst( .* );
@
