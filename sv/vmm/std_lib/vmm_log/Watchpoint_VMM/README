

Keywords:
		Search keywords: 	SV VMM  vmm_log watchpoint
 
Technical content:
 
		Title:    dding watchpoint to vmm_log instances
 
		Objective: demonstrate how to add watchpoints to vmm_log instances so that on specific messages issue by the log service, a user can stop/pause simulation for more detailed debugging 
		Description: 	
Watchpoints can be created with vmm_log instances which can be useful during debugging. These watchpoints will be triggered when the specified message is issued. The message can be specified by type, severity and by text pattern. By default, messages of all types, severities and text are specified. A message must match all the specified criteria to trigger a watchpoint.  

The vmm_log::create_watchpoint() - creates a watchpoint descriptor,
	virtual function int create_watchpoint(	int types = ALL_TYPS, int severity = ALL_SEVS, string text = "", logic issued = 1'bx );
	
	The vmm_log::add_watchpoint() - once a watchpoint has been created we can add it to any of the log instances in the environment.
	virtual function void add_watchpoint(	int watchpoint_id, string name = "", string instance = "", bit recurse = 0);
	
	
	If a message matching the watchpoint specification is issued by any of the log instances associated with watchpoint, the watchpoint is triggered.  
	The vmm_log::wait_for_watchpoint() - waits for the specified watchpoint to be triggered by a message issued by one of the log instances attached to the watchpoint. A descriptor of the message that triggered the watchpoint will be returned.
		virtual task wait_for_watchpoint(	int watchpoint_id, ref vmm_log_msg msg); 
		Wehn run in GUI mode (simv -gui0, the user can get DVE to stop when these watchpoints are triggered


		Additional setup: None	
 
 To run the example:
      Using Makefile:
       	clean           -- To clean up the log files and executable of previous run
       	comp            -- To compile the design
        run             -- To run the design
        all             -- It does all the above steps.
     Using shell scripts:
        clean.csh       -- To clean up the log files and executable of previous run
        comp.csh        -- To compile the design
        run.csh         -- To run the design  
 
 
Location Information:
		PATH: 			$VCS_HOME/doc/examples/testbench/sv/vmm/std_lib/vmm_log/Watchpoint_VMM
		DIAGRAMS: 		None
		Cross Reference:	$VCS_HOME/doc/UserGuide/vmm_user_guide.pdf
